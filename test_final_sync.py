#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ª–æ–≥–∏–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É –±–æ—Ç–æ–º –∏ —Å–µ—Ä–≤–µ—Ä–æ–º
"""

import sqlite3
from datetime import datetime, timedelta

def test_final_sync():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é"""
    print("üéØ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ª–æ–≥–∏–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏...")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('chillivili.db')
    cur = conn.cursor()
    
    # –¢–µ—Å—Ç–æ–≤–∞—è –¥–∞—Ç–∞
    test_date = (datetime.now() + timedelta(days=2)).strftime('%Y-%m-%d')
    
    try:
        # 1. –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        print(f"1. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∞—Ç—ã {test_date}")
        cur.execute("DELETE FROM bookings WHERE date = ?", (test_date,))
        conn.commit()
        print("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
        
        # 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ (—Å–∏–º—É–ª—è—Ü–∏—è)
        print(f"2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –±–æ—Ç–∞")
        test_user_id = 1
        test_time = "14:00"
        test_duration = 4  # 4 —á–∞—Å–∞
        test_guests = 3
        test_total_price = test_guests * test_duration * 500
        
        cur.execute(
            "INSERT INTO bookings (user_id, date, time, guests, duration, total_price, status, created_at) VALUES (?, ?, ?, ?, ?, ?, 'pending', ?)",
            (test_user_id, test_date, test_time, test_guests, test_duration, test_total_price, datetime.now().isoformat())
        )
        conn.commit()
        bot_booking_id = cur.lastrowid
        print(f"   ‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ —Å–æ–∑–¥–∞–Ω–æ: ID={bot_booking_id}")
        print(f"   üìä –î–µ—Ç–∞–ª–∏: {test_date} {test_time}, {test_duration}—á (–¥–æ {test_time[:2]}:{str(int(test_time[3:5]) + test_duration).zfill(2)})")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ (–∫–∞–∫ –≤ –±–æ—Ç–µ)
        print(f"3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ (–±–æ—Ç)")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã
        cur.execute("SELECT time FROM time_slots ORDER BY time")
        all_times = [row[0] for row in cur.fetchall()]
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–∞ —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
        cur.execute("""
            SELECT time, duration FROM bookings 
            WHERE date = ? AND status != 'cancelled'
        """, (test_date,))
        existing_bookings = cur.fetchall()
        
        # –í—ã—á–∏—Å–ª—è–µ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã (–ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞)
        blocked_times_bot = set()
        for booking_time, booking_duration in existing_bookings:
            start_time = datetime.strptime(booking_time, '%H:%M')
            for i in range(booking_duration):
                blocked_time = start_time + timedelta(hours=i)
                blocked_times_bot.add(blocked_time.strftime('%H:%M'))
        
        print(f"   üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã (–±–æ—Ç): {', '.join(sorted(blocked_times_bot))}")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ (–∫–∞–∫ –≤ —Å–µ—Ä–≤–µ—Ä–µ)
        print(f"4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ (—Å–µ—Ä–≤–µ—Ä)")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é 2 —á–∞—Å–∞
        requested_duration = 2
        available_times_server = []
        
        for start_time in all_times:
            start_datetime = datetime.strptime(start_time, '%H:%M')
            can_book = True
            
            for i in range(requested_duration):
                check_time = start_datetime + timedelta(hours=i)
                check_time_str = check_time.strftime('%H:%M')
                if check_time_str in blocked_times_bot:
                    can_book = False
                    break
            
            if can_book:
                available_times_server.append(start_time)
        
        print(f"   ‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã –¥–ª—è {requested_duration}—á (—Å–µ—Ä–≤–µ—Ä): {', '.join(available_times_server)}")
        
        # 5. –°–æ–∑–¥–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä (—Å–∏–º—É–ª—è—Ü–∏—è)
        print(f"5. –°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä")
        
        # –í—ã–±–∏—Ä–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è
        if available_times_server:
            server_time = available_times_server[0]
            server_duration = 2
            server_guests = 2
            server_total_price = server_guests * server_duration * 500
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
            cur.execute(
                "INSERT INTO users (name, phone, created_at) VALUES (?, ?, ?)",
                ("–°–µ—Ä–≤–µ—Ä–Ω—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "+7-999-123-45-67", datetime.now().isoformat())
            )
            server_user_id = cur.lastrowid
            
            cur.execute(
                "INSERT INTO bookings (user_id, date, time, guests, duration, total_price, status, created_at) VALUES (?, ?, ?, ?, ?, ?, 'pending', ?)",
                (server_user_id, test_date, server_time, server_guests, server_duration, server_total_price, datetime.now().isoformat())
            )
            conn.commit()
            server_booking_id = cur.lastrowid
            print(f"   ‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä —Å–æ–∑–¥–∞–Ω–æ: ID={server_booking_id}")
            print(f"   üìä –î–µ—Ç–∞–ª–∏: {test_date} {server_time}, {server_duration}—á")
        else:
            print(f"   ‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä")
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        print(f"6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è")
        
        cur.execute("""
            SELECT b.id, b.time, b.duration, b.guests, u.name
            FROM bookings b
            JOIN users u ON b.user_id = u.id
            WHERE b.date = ? AND b.status != 'cancelled'
            ORDER BY b.time
        """, (test_date,))
        
        final_bookings = cur.fetchall()
        print(f"   üìã –í—Å–µ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –Ω–∞ {test_date}: {len(final_bookings)}")
        for booking in final_bookings:
            print(f"      - ID: {booking[0]}, –í—Ä–µ–º—è: {booking[1]}, –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {booking[2]}—á, –ì–æ—Å—Ç–∏: {booking[3]}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {booking[4]}")
        
        # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–π
        print(f"7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–π")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–∞ —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
        cur.execute("""
            SELECT time, duration FROM bookings 
            WHERE date = ? AND status != 'cancelled'
        """, (test_date,))
        all_bookings = cur.fetchall()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è
        all_blocked_times = set()
        has_conflicts = False
        
        for booking_time, booking_duration in all_bookings:
            start_time = datetime.strptime(booking_time, '%H:%M')
            for i in range(booking_duration):
                blocked_time = start_time + timedelta(hours=i)
                blocked_time_str = blocked_time.strftime('%H:%M')
                if blocked_time_str in all_blocked_times:
                    has_conflicts = True
                    print(f"   ‚ùå –ö–æ–Ω—Ñ–ª–∏–∫—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω: {blocked_time_str}")
                all_blocked_times.add(blocked_time_str)
        
        if not has_conflicts:
            print(f"   ‚úÖ –ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!")
            print(f"   üìä –í—Å–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã: {', '.join(sorted(all_blocked_times))}")
        else:
            print(f"   ‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –≤ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è—Ö!")
        
        # 8. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        print(f"8. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        cur.execute("DELETE FROM bookings WHERE date = ?", (test_date,))
        cur.execute("DELETE FROM users WHERE name IN ('–°–µ—Ä–≤–µ—Ä–Ω—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')")
        conn.commit()
        print(f"   üóëÔ∏è  –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã")
        
        print("\nüéâ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –õ–æ–≥–∏–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –º–µ–∂–¥—É –±–æ—Ç–æ–º –∏ —Å–µ—Ä–≤–µ—Ä–æ–º!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    finally:
        conn.close()

if __name__ == "__main__":
    test_final_sync() 